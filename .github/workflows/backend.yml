name: Backend Workflow

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - main

jobs:
  test-and-coverage:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Install dependencies
      run: mvn clean install

    - name: Run tests and generate coverage report
      run: mvn test jacoco:report

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: backend-coverage-report
        path: back/target/site/jacoco

  check-coverage:
    runs-on: ubuntu-latest
    needs: test-and-coverage
    steps:
    - name: Download coverage report
      uses: actions/download-artifact@v4
      with:
        name: backend-coverage-report
        path: back/target/site/jacoco

    - name: Debugging - List files in target directory
      run: ls -R back/target/site/jacoco

    - name: Debugging - Display index.html
      run: cat back/target/site/jacoco/index.html | head -n 50

    - name: Check test coverage
      run: |
        COVERAGE=$(grep 'Total' back/target/site/jacoco/index.html | grep -o '[0-9]\+.[0-9]\+%')
        echo "Extracted coverage: $COVERAGE"
        
  sonarcloud-analysis:
    runs-on: ubuntu-latest
    needs: test-and-coverage
    defaults:
      run:
        working-directory: back

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Install dependencies
      run: mvn install

    - name: Run SonarCloud analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn sonar:sonar -Dsonar.login=$SONAR_TOKEN -Dsonar.organization=software-developer -Dsonar.projectKey=software-developer_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD-Backend -Dsonar.host.url=https://sonarcloud.io

  docker:
    runs-on: ubuntu-latest
    needs: test-and-coverage

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push backend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./back
        push: true
        tags: tibrook/bobapp-backend:latest
